'use strict';
// Math.random() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Å–µ–≤–¥–æ—Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π 
//–∑–∞–ø—è—Ç–æ–π –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ [0, 1), —Ç–æ –µ—Å—Ç—å, –æ—Ç 0 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ) –¥–æ 1 (–Ω–æ –Ω–µ –≤–∫–ª—é—á–∞—è 1)

const getRandomInt = (max) => {
  return Math.floor(Math.random() * Math.floor(max));
};

const isNum = n => {
  return !isNaN(parseFloat(n)) && isFinite(n);
};

const start = () => {
  let rNumber = getRandomInt(100);
  console.log('rNumber: ', rNumber);
  const game = () => {
    const num = prompt("–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100");
    if (num === null) {
      alert('–î–æ —Å–≤–∏–¥–∞–Ω–∏—è');
      return;
    }
    if (isNum(num)) {
      const realNum = +num;
      if (realNum > rNumber) {
        alert('–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µüò©');
        game();
      } else if (realNum < rNumber) {
        alert('–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µüòé');
        game();
      } else {
        if (confirm('–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –í—ã —É–≥–∞–¥–∞–ª–∏üòÄ')) {
          start();
        } else {
          alert('–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞');
          return;
        }
      }
    } else {
      alert('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ');
      game();
    }
  };
  game();
};

start();


